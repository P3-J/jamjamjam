@BaseClass = Target : "Performs actions (signal callbacks, methods) on entities with a matching 'targetname'." [
	target(string) : "Name of entity (targetname) to target." : ""
]

@BaseClass = Targetname : "Subscribes to actions (signal callbacks, reciever methods) performed by other entities with a matching 'target'." [
	targetname(string) : "Name of target to subscribe to." : ""
]

@BaseClass color(255 255 40) = Light[
	_color(color255) : "Light color" : "255 255 255"
	delay(choices) : "Attenuation" = [
		1 : "Inverse distance falloff"
		2 : "Inverse distance squared"
		5 : "Inverse distance squared B"
		0 : "Linear falloff (Default)"
		4 : "Local minlight"
		3 : "No falloff"
	]
	light(integer) : "Brightness" : 300
	mangle(string) : "Spotlight angle" : "0.00499999988824 0 0"
	wait(integer) : "Fade distance multiplier" : 1
]

@SolidClass = worldspawn : "World Entity" [
]

@SolidClass = group : "Brush Group" [
]

@SolidClass = illusionary : "Non-colliding Brush" [
]

@SolidClass = physics : "Physics Brush" [
	mass(float) :  : "1"
	velocity(string) :  : "0 0 0"
]

@PointClass size(-8 -8 -8, 8 8 8) base(Targetname, Target) = signal : "Name of signal to call target." [
	signal_name(string) : "Name of signal to call on target." : ""
]

@PointClass size(-8 -8 -8, 8 8 8) base(Targetname, Target) = receiver : "Calls methods on target." [
	receiver_name(string) :  : ""
]

@PointClass size(-8 -8 -8, 8 8 8) base(Light) = light : "Invisible light source" [
	angle(float) : "Rotation Angle" : "0"
]

@SolidClass = button : "Interactive button brush." [
	axis(string) : "Direction of movement when pressed." : "0 -1 0"
	depth(float) : "How far to move along the axis when pressed." : "0.8"
	press_signal_delay(float) : "Seconds after press() is called, before emitting is own pressed signal." : "0"
	release_delay(float) : "Seconds after a physics body exits, before calling release()" : "0"
	release_signal_delay(float) : "Seconds after release() is called, before emitting is own released signal." : "0"
	speed(float) : "Delta multiplier for a lerp weight to move the button to its desired position." : "8"
	target(string) :  : ""
	trigger_signal_delay(float) : "Seconds after press() is called, before emitting the trigger signal." : "0"
]

@SolidClass = func_detail : "Detail Brush" [
]

@SolidClass = mover : "Moving brush." [
	rotation(string) :  : "0 0 0"
	scale(string) :  : "1 1 1"
	speed(float) :  : "1"
	translation(string) :  : "0 0 0"
	targetname(string) :  : ""
]

@SolidClass = rotate : "Rotating Brush" [
	axis(string) : "Rotation Axis" : "0 1 0"
	speed(float) : "Rotation Speed" : "360"
]

@SolidClass = trigger : "Trigger Volume" [
	target(string) :  : ""
]

@SolidClass = wall : "Basic entity brush." [
]
